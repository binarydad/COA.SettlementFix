//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace COA.SettlementFix.CreditorServiceWcf {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OfferResponse", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    [System.SerializableAttribute()]
    public partial class OfferResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreditorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private COA.SettlementFix.CreditorServiceWcf.CreditorStatusType CreditorStatusTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OfferIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfferLetterCheckSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutsourcedCreditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OutsourcedCreditorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RejectReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RejectReasonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private COA.SettlementFix.CreditorServiceWcf.CreditorResponseChannel ResponseChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private COA.SettlementFix.CreditorServiceWcf.SifImportStatus SifImportStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreditorId {
            get {
                return this.CreditorIdField;
            }
            set {
                if ((this.CreditorIdField.Equals(value) != true)) {
                    this.CreditorIdField = value;
                    this.RaisePropertyChanged("CreditorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public COA.SettlementFix.CreditorServiceWcf.CreditorStatusType CreditorStatusType {
            get {
                return this.CreditorStatusTypeField;
            }
            set {
                if ((this.CreditorStatusTypeField.Equals(value) != true)) {
                    this.CreditorStatusTypeField = value;
                    this.RaisePropertyChanged("CreditorStatusType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OfferId {
            get {
                return this.OfferIdField;
            }
            set {
                if ((this.OfferIdField.Equals(value) != true)) {
                    this.OfferIdField = value;
                    this.RaisePropertyChanged("OfferId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfferLetterCheckSum {
            get {
                return this.OfferLetterCheckSumField;
            }
            set {
                if ((object.ReferenceEquals(this.OfferLetterCheckSumField, value) != true)) {
                    this.OfferLetterCheckSumField = value;
                    this.RaisePropertyChanged("OfferLetterCheckSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutsourcedCreditor {
            get {
                return this.OutsourcedCreditorField;
            }
            set {
                if ((object.ReferenceEquals(this.OutsourcedCreditorField, value) != true)) {
                    this.OutsourcedCreditorField = value;
                    this.RaisePropertyChanged("OutsourcedCreditor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OutsourcedCreditorId {
            get {
                return this.OutsourcedCreditorIdField;
            }
            set {
                if ((this.OutsourcedCreditorIdField.Equals(value) != true)) {
                    this.OutsourcedCreditorIdField = value;
                    this.RaisePropertyChanged("OutsourcedCreditorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RejectReason {
            get {
                return this.RejectReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.RejectReasonField, value) != true)) {
                    this.RejectReasonField = value;
                    this.RaisePropertyChanged("RejectReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RejectReasonId {
            get {
                return this.RejectReasonIdField;
            }
            set {
                if ((this.RejectReasonIdField.Equals(value) != true)) {
                    this.RejectReasonIdField = value;
                    this.RaisePropertyChanged("RejectReasonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public COA.SettlementFix.CreditorServiceWcf.CreditorResponseChannel ResponseChannel {
            get {
                return this.ResponseChannelField;
            }
            set {
                if ((this.ResponseChannelField.Equals(value) != true)) {
                    this.ResponseChannelField = value;
                    this.RaisePropertyChanged("ResponseChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public COA.SettlementFix.CreditorServiceWcf.SifImportStatus SifImportStatus {
            get {
                return this.SifImportStatusField;
            }
            set {
                if ((this.SifImportStatusField.Equals(value) != true)) {
                    this.SifImportStatusField = value;
                    this.RaisePropertyChanged("SifImportStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditorStatusType", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    public enum CreditorStatusType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditorWontSettle = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagerAssignedAccount = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagerReassigned = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedVerbalAuth = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedAtc = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OfferAbovePct = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OfferMadePending = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Settled = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIFRecieved = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecialDraft = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubmitForFinalApproval = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubmitForSettlement = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemAssigned = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingForChargeOff = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingForPOA = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingForSIF = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Working = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CounterOfferResubmit = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubmitForFinalApprovalAuto = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountRecalled = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountOutsourced = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NcaReviewed = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NcaBalanceInFull = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NcaNotDelinquentEnough = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NcaDelinquencyFollowUp = 23,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditorResponseChannel", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    public enum CreditorResponseChannel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Portal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fax = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VerbalCalculator = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SifImportStatus", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    public enum SifImportStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Complete = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreditorProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBulkOfferEmailRecipientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBulkOfferEmailSenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBulkOfferReplyEmailRecipientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultForCreditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPortalUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSecuredOfferEmailRecipientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSecuredOfferEmailReplyRecipientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] OrginalCreditorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalOnboardStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorName {
            get {
                return this.CreditorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorNameField, value) != true)) {
                    this.CreditorNameField = value;
                    this.RaisePropertyChanged("CreditorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreditorProfileId {
            get {
                return this.CreditorProfileIdField;
            }
            set {
                if ((this.CreditorProfileIdField.Equals(value) != true)) {
                    this.CreditorProfileIdField = value;
                    this.RaisePropertyChanged("CreditorProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBulkOfferEmailRecipient {
            get {
                return this.IsBulkOfferEmailRecipientField;
            }
            set {
                if ((this.IsBulkOfferEmailRecipientField.Equals(value) != true)) {
                    this.IsBulkOfferEmailRecipientField = value;
                    this.RaisePropertyChanged("IsBulkOfferEmailRecipient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBulkOfferEmailSender {
            get {
                return this.IsBulkOfferEmailSenderField;
            }
            set {
                if ((this.IsBulkOfferEmailSenderField.Equals(value) != true)) {
                    this.IsBulkOfferEmailSenderField = value;
                    this.RaisePropertyChanged("IsBulkOfferEmailSender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBulkOfferReplyEmailRecipient {
            get {
                return this.IsBulkOfferReplyEmailRecipientField;
            }
            set {
                if ((this.IsBulkOfferReplyEmailRecipientField.Equals(value) != true)) {
                    this.IsBulkOfferReplyEmailRecipientField = value;
                    this.RaisePropertyChanged("IsBulkOfferReplyEmailRecipient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefaultForCreditor {
            get {
                return this.IsDefaultForCreditorField;
            }
            set {
                if ((this.IsDefaultForCreditorField.Equals(value) != true)) {
                    this.IsDefaultForCreditorField = value;
                    this.RaisePropertyChanged("IsDefaultForCreditor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPortalUser {
            get {
                return this.IsPortalUserField;
            }
            set {
                if ((this.IsPortalUserField.Equals(value) != true)) {
                    this.IsPortalUserField = value;
                    this.RaisePropertyChanged("IsPortalUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSecuredOfferEmailRecipient {
            get {
                return this.IsSecuredOfferEmailRecipientField;
            }
            set {
                if ((this.IsSecuredOfferEmailRecipientField.Equals(value) != true)) {
                    this.IsSecuredOfferEmailRecipientField = value;
                    this.RaisePropertyChanged("IsSecuredOfferEmailRecipient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSecuredOfferEmailReplyRecipient {
            get {
                return this.IsSecuredOfferEmailReplyRecipientField;
            }
            set {
                if ((this.IsSecuredOfferEmailReplyRecipientField.Equals(value) != true)) {
                    this.IsSecuredOfferEmailReplyRecipientField = value;
                    this.RaisePropertyChanged("IsSecuredOfferEmailReplyRecipient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] OrginalCreditorID {
            get {
                return this.OrginalCreditorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OrginalCreditorIDField, value) != true)) {
                    this.OrginalCreditorIDField = value;
                    this.RaisePropertyChanged("OrginalCreditorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalOnboardStatus {
            get {
                return this.PortalOnboardStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalOnboardStatusField, value) != true)) {
                    this.PortalOnboardStatusField = value;
                    this.RaisePropertyChanged("PortalOnboardStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEmail {
            get {
                return this.PrimaryEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEmailField, value) != true)) {
                    this.PrimaryEmailField = value;
                    this.RaisePropertyChanged("PrimaryEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPhone {
            get {
                return this.PrimaryPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPhoneField, value) != true)) {
                    this.PrimaryPhoneField = value;
                    this.RaisePropertyChanged("PrimaryPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Verified {
            get {
                return this.VerifiedField;
            }
            set {
                if ((this.VerifiedField.Equals(value) != true)) {
                    this.VerifiedField = value;
                    this.RaisePropertyChanged("Verified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnboardStatusType", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    public enum OnboardStatusType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingVerification = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Activated = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettlementAttemptFilter", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    [System.SerializableAttribute()]
    public partial class SettlementAttemptFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreditorContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreditorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] CreditorIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreditorProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FirstPaymentDateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FirstPaymentDateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PortalSubmissionDateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PortalSubmissionDateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResponseDateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResponseDateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SettlementAttemptIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SettlementAttemptIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreditorContactId {
            get {
                return this.CreditorContactIdField;
            }
            set {
                if ((this.CreditorContactIdField.Equals(value) != true)) {
                    this.CreditorContactIdField = value;
                    this.RaisePropertyChanged("CreditorContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreditorId {
            get {
                return this.CreditorIdField;
            }
            set {
                if ((this.CreditorIdField.Equals(value) != true)) {
                    this.CreditorIdField = value;
                    this.RaisePropertyChanged("CreditorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] CreditorIds {
            get {
                return this.CreditorIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorIdsField, value) != true)) {
                    this.CreditorIdsField = value;
                    this.RaisePropertyChanged("CreditorIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreditorProfileId {
            get {
                return this.CreditorProfileIdField;
            }
            set {
                if ((this.CreditorProfileIdField.Equals(value) != true)) {
                    this.CreditorProfileIdField = value;
                    this.RaisePropertyChanged("CreditorProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirstPaymentDateEnd {
            get {
                return this.FirstPaymentDateEndField;
            }
            set {
                if ((this.FirstPaymentDateEndField.Equals(value) != true)) {
                    this.FirstPaymentDateEndField = value;
                    this.RaisePropertyChanged("FirstPaymentDateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirstPaymentDateStart {
            get {
                return this.FirstPaymentDateStartField;
            }
            set {
                if ((this.FirstPaymentDateStartField.Equals(value) != true)) {
                    this.FirstPaymentDateStartField = value;
                    this.RaisePropertyChanged("FirstPaymentDateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PortalSubmissionDateEnd {
            get {
                return this.PortalSubmissionDateEndField;
            }
            set {
                if ((this.PortalSubmissionDateEndField.Equals(value) != true)) {
                    this.PortalSubmissionDateEndField = value;
                    this.RaisePropertyChanged("PortalSubmissionDateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PortalSubmissionDateStart {
            get {
                return this.PortalSubmissionDateStartField;
            }
            set {
                if ((this.PortalSubmissionDateStartField.Equals(value) != true)) {
                    this.PortalSubmissionDateStartField = value;
                    this.RaisePropertyChanged("PortalSubmissionDateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResponseDateEnd {
            get {
                return this.ResponseDateEndField;
            }
            set {
                if ((this.ResponseDateEndField.Equals(value) != true)) {
                    this.ResponseDateEndField = value;
                    this.RaisePropertyChanged("ResponseDateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResponseDateStart {
            get {
                return this.ResponseDateStartField;
            }
            set {
                if ((this.ResponseDateStartField.Equals(value) != true)) {
                    this.ResponseDateStartField = value;
                    this.RaisePropertyChanged("ResponseDateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SettlementAttemptId {
            get {
                return this.SettlementAttemptIdField;
            }
            set {
                if ((this.SettlementAttemptIdField.Equals(value) != true)) {
                    this.SettlementAttemptIdField = value;
                    this.RaisePropertyChanged("SettlementAttemptId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SettlementAttemptIds {
            get {
                return this.SettlementAttemptIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.SettlementAttemptIdsField, value) != true)) {
                    this.SettlementAttemptIdsField = value;
                    this.RaisePropertyChanged("SettlementAttemptIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettlementAttempt", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    [System.SerializableAttribute()]
    public partial class SettlementAttempt : COA.SettlementFix.CreditorServiceWcf.Settlement {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttemptedAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientSsnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientStreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoClientSsnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorContactFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreditorContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorContactLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreditorProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private COA.SettlementFix.CreditorServiceWcf.CreditorStatusType CreditorStatusTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DelinquentQualifiedDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FirstPaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FollowUpDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FollowUpReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPortalCreditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatestRejectReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LatestRejectReasonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<COA.SettlementFix.CreditorServiceWcf.CreditorStatusType> LatestResponseCreditorStatusTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LatestResponseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MinFirstPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPaymentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private COA.SettlementFix.CreditorServiceWcf.OfferAcceptanceMethod OfferAcceptanceMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfferLetterCheckSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OriginalCreditorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentBreakdownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoaFileCheckSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PortalSubmissionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesAgentEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesAgentFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalesAgentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesAgentLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesAgentTeamLeaderEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesTeamNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SecondPaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SettledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SettledDate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SettlementAmount1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SettlementTermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpokeToField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttemptedAgent {
            get {
                return this.AttemptedAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.AttemptedAgentField, value) != true)) {
                    this.AttemptedAgentField = value;
                    this.RaisePropertyChanged("AttemptedAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientCity {
            get {
                return this.ClientCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientCityField, value) != true)) {
                    this.ClientCityField = value;
                    this.RaisePropertyChanged("ClientCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientFirstName {
            get {
                return this.ClientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientFirstNameField, value) != true)) {
                    this.ClientFirstNameField = value;
                    this.RaisePropertyChanged("ClientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientLastName {
            get {
                return this.ClientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientLastNameField, value) != true)) {
                    this.ClientLastNameField = value;
                    this.RaisePropertyChanged("ClientLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientSsn {
            get {
                return this.ClientSsnField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientSsnField, value) != true)) {
                    this.ClientSsnField = value;
                    this.RaisePropertyChanged("ClientSsn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientState {
            get {
                return this.ClientStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientStateField, value) != true)) {
                    this.ClientStateField = value;
                    this.RaisePropertyChanged("ClientState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientStatus {
            get {
                return this.ClientStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientStatusField, value) != true)) {
                    this.ClientStatusField = value;
                    this.RaisePropertyChanged("ClientStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientStreet {
            get {
                return this.ClientStreetField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientStreetField, value) != true)) {
                    this.ClientStreetField = value;
                    this.RaisePropertyChanged("ClientStreet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientZip {
            get {
                return this.ClientZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientZipField, value) != true)) {
                    this.ClientZipField = value;
                    this.RaisePropertyChanged("ClientZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoClientName {
            get {
                return this.CoClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CoClientNameField, value) != true)) {
                    this.CoClientNameField = value;
                    this.RaisePropertyChanged("CoClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoClientSsn {
            get {
                return this.CoClientSsnField;
            }
            set {
                if ((object.ReferenceEquals(this.CoClientSsnField, value) != true)) {
                    this.CoClientSsnField = value;
                    this.RaisePropertyChanged("CoClientSsn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorContactEmail {
            get {
                return this.CreditorContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorContactEmailField, value) != true)) {
                    this.CreditorContactEmailField = value;
                    this.RaisePropertyChanged("CreditorContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorContactFirstName {
            get {
                return this.CreditorContactFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorContactFirstNameField, value) != true)) {
                    this.CreditorContactFirstNameField = value;
                    this.RaisePropertyChanged("CreditorContactFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreditorContactId {
            get {
                return this.CreditorContactIdField;
            }
            set {
                if ((this.CreditorContactIdField.Equals(value) != true)) {
                    this.CreditorContactIdField = value;
                    this.RaisePropertyChanged("CreditorContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorContactLastName {
            get {
                return this.CreditorContactLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorContactLastNameField, value) != true)) {
                    this.CreditorContactLastNameField = value;
                    this.RaisePropertyChanged("CreditorContactLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreditorProfileId {
            get {
                return this.CreditorProfileIdField;
            }
            set {
                if ((this.CreditorProfileIdField.Equals(value) != true)) {
                    this.CreditorProfileIdField = value;
                    this.RaisePropertyChanged("CreditorProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorReferenceNumber {
            get {
                return this.CreditorReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorReferenceNumberField, value) != true)) {
                    this.CreditorReferenceNumberField = value;
                    this.RaisePropertyChanged("CreditorReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public COA.SettlementFix.CreditorServiceWcf.CreditorStatusType CreditorStatusType {
            get {
                return this.CreditorStatusTypeField;
            }
            set {
                if ((this.CreditorStatusTypeField.Equals(value) != true)) {
                    this.CreditorStatusTypeField = value;
                    this.RaisePropertyChanged("CreditorStatusType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrentBalance {
            get {
                return this.CurrentBalanceField;
            }
            set {
                if ((this.CurrentBalanceField.Equals(value) != true)) {
                    this.CurrentBalanceField = value;
                    this.RaisePropertyChanged("CurrentBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DelinquentQualifiedDays {
            get {
                return this.DelinquentQualifiedDaysField;
            }
            set {
                if ((this.DelinquentQualifiedDaysField.Equals(value) != true)) {
                    this.DelinquentQualifiedDaysField = value;
                    this.RaisePropertyChanged("DelinquentQualifiedDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirstPaymentDate {
            get {
                return this.FirstPaymentDateField;
            }
            set {
                if ((this.FirstPaymentDateField.Equals(value) != true)) {
                    this.FirstPaymentDateField = value;
                    this.RaisePropertyChanged("FirstPaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FollowUpDate {
            get {
                return this.FollowUpDateField;
            }
            set {
                if ((this.FollowUpDateField.Equals(value) != true)) {
                    this.FollowUpDateField = value;
                    this.RaisePropertyChanged("FollowUpDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FollowUpReason {
            get {
                return this.FollowUpReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.FollowUpReasonField, value) != true)) {
                    this.FollowUpReasonField = value;
                    this.RaisePropertyChanged("FollowUpReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPortalCreditor {
            get {
                return this.IsPortalCreditorField;
            }
            set {
                if ((this.IsPortalCreditorField.Equals(value) != true)) {
                    this.IsPortalCreditorField = value;
                    this.RaisePropertyChanged("IsPortalCreditor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LatestRejectReason {
            get {
                return this.LatestRejectReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestRejectReasonField, value) != true)) {
                    this.LatestRejectReasonField = value;
                    this.RaisePropertyChanged("LatestRejectReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LatestRejectReasonID {
            get {
                return this.LatestRejectReasonIDField;
            }
            set {
                if ((this.LatestRejectReasonIDField.Equals(value) != true)) {
                    this.LatestRejectReasonIDField = value;
                    this.RaisePropertyChanged("LatestRejectReasonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<COA.SettlementFix.CreditorServiceWcf.CreditorStatusType> LatestResponseCreditorStatusType {
            get {
                return this.LatestResponseCreditorStatusTypeField;
            }
            set {
                if ((this.LatestResponseCreditorStatusTypeField.Equals(value) != true)) {
                    this.LatestResponseCreditorStatusTypeField = value;
                    this.RaisePropertyChanged("LatestResponseCreditorStatusType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LatestResponseDate {
            get {
                return this.LatestResponseDateField;
            }
            set {
                if ((this.LatestResponseDateField.Equals(value) != true)) {
                    this.LatestResponseDateField = value;
                    this.RaisePropertyChanged("LatestResponseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MinFirstPayment {
            get {
                return this.MinFirstPaymentField;
            }
            set {
                if ((this.MinFirstPaymentField.Equals(value) != true)) {
                    this.MinFirstPaymentField = value;
                    this.RaisePropertyChanged("MinFirstPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPayments {
            get {
                return this.NumberOfPaymentsField;
            }
            set {
                if ((this.NumberOfPaymentsField.Equals(value) != true)) {
                    this.NumberOfPaymentsField = value;
                    this.RaisePropertyChanged("NumberOfPayments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public COA.SettlementFix.CreditorServiceWcf.OfferAcceptanceMethod OfferAcceptanceMethod {
            get {
                return this.OfferAcceptanceMethodField;
            }
            set {
                if ((this.OfferAcceptanceMethodField.Equals(value) != true)) {
                    this.OfferAcceptanceMethodField = value;
                    this.RaisePropertyChanged("OfferAcceptanceMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfferLetterCheckSum {
            get {
                return this.OfferLetterCheckSumField;
            }
            set {
                if ((object.ReferenceEquals(this.OfferLetterCheckSumField, value) != true)) {
                    this.OfferLetterCheckSumField = value;
                    this.RaisePropertyChanged("OfferLetterCheckSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OriginalCreditorId {
            get {
                return this.OriginalCreditorIdField;
            }
            set {
                if ((this.OriginalCreditorIdField.Equals(value) != true)) {
                    this.OriginalCreditorIdField = value;
                    this.RaisePropertyChanged("OriginalCreditorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentBreakdown {
            get {
                return this.PaymentBreakdownField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentBreakdownField, value) != true)) {
                    this.PaymentBreakdownField = value;
                    this.RaisePropertyChanged("PaymentBreakdown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((this.PhoneNumberField.Equals(value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoaFileCheckSum {
            get {
                return this.PoaFileCheckSumField;
            }
            set {
                if ((object.ReferenceEquals(this.PoaFileCheckSumField, value) != true)) {
                    this.PoaFileCheckSumField = value;
                    this.RaisePropertyChanged("PoaFileCheckSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PortalSubmissionDate {
            get {
                return this.PortalSubmissionDateField;
            }
            set {
                if ((this.PortalSubmissionDateField.Equals(value) != true)) {
                    this.PortalSubmissionDateField = value;
                    this.RaisePropertyChanged("PortalSubmissionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesAgentEmail {
            get {
                return this.SalesAgentEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesAgentEmailField, value) != true)) {
                    this.SalesAgentEmailField = value;
                    this.RaisePropertyChanged("SalesAgentEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesAgentFirstName {
            get {
                return this.SalesAgentFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesAgentFirstNameField, value) != true)) {
                    this.SalesAgentFirstNameField = value;
                    this.RaisePropertyChanged("SalesAgentFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesAgentId {
            get {
                return this.SalesAgentIdField;
            }
            set {
                if ((this.SalesAgentIdField.Equals(value) != true)) {
                    this.SalesAgentIdField = value;
                    this.RaisePropertyChanged("SalesAgentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesAgentLastName {
            get {
                return this.SalesAgentLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesAgentLastNameField, value) != true)) {
                    this.SalesAgentLastNameField = value;
                    this.RaisePropertyChanged("SalesAgentLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesAgentTeamLeaderEmail {
            get {
                return this.SalesAgentTeamLeaderEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesAgentTeamLeaderEmailField, value) != true)) {
                    this.SalesAgentTeamLeaderEmailField = value;
                    this.RaisePropertyChanged("SalesAgentTeamLeaderEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesTeamName {
            get {
                return this.SalesTeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesTeamNameField, value) != true)) {
                    this.SalesTeamNameField = value;
                    this.RaisePropertyChanged("SalesTeamName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SecondPaymentDate {
            get {
                return this.SecondPaymentDateField;
            }
            set {
                if ((this.SecondPaymentDateField.Equals(value) != true)) {
                    this.SecondPaymentDateField = value;
                    this.RaisePropertyChanged("SecondPaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Settled {
            get {
                return this.SettledField;
            }
            set {
                if ((this.SettledField.Equals(value) != true)) {
                    this.SettledField = value;
                    this.RaisePropertyChanged("Settled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="SettledDate")]
        public System.Nullable<System.DateTime> SettledDate1 {
            get {
                return this.SettledDate1Field;
            }
            set {
                if ((this.SettledDate1Field.Equals(value) != true)) {
                    this.SettledDate1Field = value;
                    this.RaisePropertyChanged("SettledDate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="SettlementAmount")]
        public decimal SettlementAmount1 {
            get {
                return this.SettlementAmount1Field;
            }
            set {
                if ((this.SettlementAmount1Field.Equals(value) != true)) {
                    this.SettlementAmount1Field = value;
                    this.RaisePropertyChanged("SettlementAmount1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SettlementTerm {
            get {
                return this.SettlementTermField;
            }
            set {
                if ((this.SettlementTermField.Equals(value) != true)) {
                    this.SettlementTermField = value;
                    this.RaisePropertyChanged("SettlementTerm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpokeTo {
            get {
                return this.SpokeToField;
            }
            set {
                if ((object.ReferenceEquals(this.SpokeToField, value) != true)) {
                    this.SpokeToField = value;
                    this.RaisePropertyChanged("SpokeTo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Settlement", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(COA.SettlementFix.CreditorServiceWcf.SettlementAttempt))]
    public partial class Settlement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string @__creditorStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string accountNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double approximateBalancesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long creditorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string creditorStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string currentCreditorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double estimatedSettlementAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string originalCreditorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool removedFromProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string settledDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double settlementAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool settlementApprovalNeededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double sfmEstimatedFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalPaymentsFutureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalPaymentsUnclearedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string @__creditorStatus {
            get {
                return this.@__creditorStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.@__creditorStatusField, value) != true)) {
                    this.@__creditorStatusField = value;
                    this.RaisePropertyChanged("__creditorStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string accountNum {
            get {
                return this.accountNumField;
            }
            set {
                if ((object.ReferenceEquals(this.accountNumField, value) != true)) {
                    this.accountNumField = value;
                    this.RaisePropertyChanged("accountNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double approximateBalances {
            get {
                return this.approximateBalancesField;
            }
            set {
                if ((this.approximateBalancesField.Equals(value) != true)) {
                    this.approximateBalancesField = value;
                    this.RaisePropertyChanged("approximateBalances");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long creditorId {
            get {
                return this.creditorIdField;
            }
            set {
                if ((this.creditorIdField.Equals(value) != true)) {
                    this.creditorIdField = value;
                    this.RaisePropertyChanged("creditorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string creditorStatus {
            get {
                return this.creditorStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.creditorStatusField, value) != true)) {
                    this.creditorStatusField = value;
                    this.RaisePropertyChanged("creditorStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string currentCreditorName {
            get {
                return this.currentCreditorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.currentCreditorNameField, value) != true)) {
                    this.currentCreditorNameField = value;
                    this.RaisePropertyChanged("currentCreditorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerCompany {
            get {
                return this.customerCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.customerCompanyField, value) != true)) {
                    this.customerCompanyField = value;
                    this.RaisePropertyChanged("customerCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double estimatedSettlementAmount {
            get {
                return this.estimatedSettlementAmountField;
            }
            set {
                if ((this.estimatedSettlementAmountField.Equals(value) != true)) {
                    this.estimatedSettlementAmountField = value;
                    this.RaisePropertyChanged("estimatedSettlementAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string originalCreditorName {
            get {
                return this.originalCreditorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.originalCreditorNameField, value) != true)) {
                    this.originalCreditorNameField = value;
                    this.RaisePropertyChanged("originalCreditorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool removedFromProgram {
            get {
                return this.removedFromProgramField;
            }
            set {
                if ((this.removedFromProgramField.Equals(value) != true)) {
                    this.removedFromProgramField = value;
                    this.RaisePropertyChanged("removedFromProgram");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string settledDate {
            get {
                return this.settledDateField;
            }
            set {
                if ((object.ReferenceEquals(this.settledDateField, value) != true)) {
                    this.settledDateField = value;
                    this.RaisePropertyChanged("settledDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double settlementAmount {
            get {
                return this.settlementAmountField;
            }
            set {
                if ((this.settlementAmountField.Equals(value) != true)) {
                    this.settlementAmountField = value;
                    this.RaisePropertyChanged("settlementAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool settlementApprovalNeeded {
            get {
                return this.settlementApprovalNeededField;
            }
            set {
                if ((this.settlementApprovalNeededField.Equals(value) != true)) {
                    this.settlementApprovalNeededField = value;
                    this.RaisePropertyChanged("settlementApprovalNeeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double sfmEstimatedFee {
            get {
                return this.sfmEstimatedFeeField;
            }
            set {
                if ((this.sfmEstimatedFeeField.Equals(value) != true)) {
                    this.sfmEstimatedFeeField = value;
                    this.RaisePropertyChanged("sfmEstimatedFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int totalPaymentsFuture {
            get {
                return this.totalPaymentsFutureField;
            }
            set {
                if ((this.totalPaymentsFutureField.Equals(value) != true)) {
                    this.totalPaymentsFutureField = value;
                    this.RaisePropertyChanged("totalPaymentsFuture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int totalPaymentsUncleared {
            get {
                return this.totalPaymentsUnclearedField;
            }
            set {
                if ((this.totalPaymentsUnclearedField.Equals(value) != true)) {
                    this.totalPaymentsUnclearedField = value;
                    this.RaisePropertyChanged("totalPaymentsUncleared");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OfferAcceptanceMethod", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    public enum OfferAcceptanceMethod : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PortalAcceptance = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllMethods = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BulkSpreadsheet = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutsourcedCreditor", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    [System.SerializableAttribute()]
    public partial class OutsourcedCreditor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RejectionReason", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    [System.SerializableAttribute()]
    public partial class RejectionReason : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Display {
            get {
                return this.DisplayField;
            }
            set {
                if ((this.DisplayField.Equals(value) != true)) {
                    this.DisplayField = value;
                    this.RaisePropertyChanged("Display");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payment", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    [System.SerializableAttribute()]
    public partial class Payment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreditorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreditorId {
            get {
                return this.CreditorIdField;
            }
            set {
                if ((this.CreditorIdField.Equals(value) != true)) {
                    this.CreditorIdField = value;
                    this.RaisePropertyChanged("CreditorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentNumber {
            get {
                return this.PaymentNumberField;
            }
            set {
                if ((this.PaymentNumberField.Equals(value) != true)) {
                    this.PaymentNumberField = value;
                    this.RaisePropertyChanged("PaymentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentTypeField, value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditorEmailRequest", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    [System.SerializableAttribute()]
    public partial class CreditorEmailRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] AttachmentFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] AttachmentFiles {
            get {
                return this.AttachmentFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentFilesField, value) != true)) {
                    this.AttachmentFilesField = value;
                    this.RaisePropertyChanged("AttachmentFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestType {
            get {
                return this.RequestTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestTypeField, value) != true)) {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunicationResponse", Namespace="http://EnterpriseServices.CommunicationService.com/COA.EnterpriseServices.Communi" +
        "cation")]
    [System.SerializableAttribute()]
    public partial class CommunicationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private COA.SettlementFix.CreditorServiceWcf.RequestStatusType RequestStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestID {
            get {
                return this.RequestIDField;
            }
            set {
                if ((this.RequestIDField.Equals(value) != true)) {
                    this.RequestIDField = value;
                    this.RaisePropertyChanged("RequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public COA.SettlementFix.CreditorServiceWcf.RequestStatusType RequestStatus {
            get {
                return this.RequestStatusField;
            }
            set {
                if ((this.RequestStatusField.Equals(value) != true)) {
                    this.RequestStatusField = value;
                    this.RaisePropertyChanged("RequestStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestStatusType", Namespace="http://EnterpriseServices.CommunicationService.com/COA.EnterpriseServices.Communi" +
        "cation")]
    public enum RequestStatusType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Submitted = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processing = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettlementAttemptUpdate", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    [System.SerializableAttribute()]
    public partial class SettlementAttemptUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttemptedAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CloseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CloseReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreditorContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreditorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private COA.SettlementFix.CreditorServiceWcf.CreditorStatusType CreditorStatusTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CurrentBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FollowUpDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FollowUpReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MinimumPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> NumberOfPaymentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private COA.SettlementFix.CreditorServiceWcf.OfferAcceptanceMethod OfferAcceptanceMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> OfferAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PortalOfferStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RelatedCreditorContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SettlementAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SettlementAttemptIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SettlementTermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpokeToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttemptedAgent {
            get {
                return this.AttemptedAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.AttemptedAgentField, value) != true)) {
                    this.AttemptedAgentField = value;
                    this.RaisePropertyChanged("AttemptedAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CloseDate {
            get {
                return this.CloseDateField;
            }
            set {
                if ((this.CloseDateField.Equals(value) != true)) {
                    this.CloseDateField = value;
                    this.RaisePropertyChanged("CloseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CloseReason {
            get {
                return this.CloseReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.CloseReasonField, value) != true)) {
                    this.CloseReasonField = value;
                    this.RaisePropertyChanged("CloseReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreditorContactId {
            get {
                return this.CreditorContactIdField;
            }
            set {
                if ((this.CreditorContactIdField.Equals(value) != true)) {
                    this.CreditorContactIdField = value;
                    this.RaisePropertyChanged("CreditorContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreditorId {
            get {
                return this.CreditorIdField;
            }
            set {
                if ((this.CreditorIdField.Equals(value) != true)) {
                    this.CreditorIdField = value;
                    this.RaisePropertyChanged("CreditorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public COA.SettlementFix.CreditorServiceWcf.CreditorStatusType CreditorStatusType {
            get {
                return this.CreditorStatusTypeField;
            }
            set {
                if ((this.CreditorStatusTypeField.Equals(value) != true)) {
                    this.CreditorStatusTypeField = value;
                    this.RaisePropertyChanged("CreditorStatusType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CurrentBalance {
            get {
                return this.CurrentBalanceField;
            }
            set {
                if ((this.CurrentBalanceField.Equals(value) != true)) {
                    this.CurrentBalanceField = value;
                    this.RaisePropertyChanged("CurrentBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FollowUpDate {
            get {
                return this.FollowUpDateField;
            }
            set {
                if ((this.FollowUpDateField.Equals(value) != true)) {
                    this.FollowUpDateField = value;
                    this.RaisePropertyChanged("FollowUpDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FollowUpReason {
            get {
                return this.FollowUpReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.FollowUpReasonField, value) != true)) {
                    this.FollowUpReasonField = value;
                    this.RaisePropertyChanged("FollowUpReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MinimumPayment {
            get {
                return this.MinimumPaymentField;
            }
            set {
                if ((this.MinimumPaymentField.Equals(value) != true)) {
                    this.MinimumPaymentField = value;
                    this.RaisePropertyChanged("MinimumPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> NumberOfPayments {
            get {
                return this.NumberOfPaymentsField;
            }
            set {
                if ((this.NumberOfPaymentsField.Equals(value) != true)) {
                    this.NumberOfPaymentsField = value;
                    this.RaisePropertyChanged("NumberOfPayments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public COA.SettlementFix.CreditorServiceWcf.OfferAcceptanceMethod OfferAcceptanceMethod {
            get {
                return this.OfferAcceptanceMethodField;
            }
            set {
                if ((this.OfferAcceptanceMethodField.Equals(value) != true)) {
                    this.OfferAcceptanceMethodField = value;
                    this.RaisePropertyChanged("OfferAcceptanceMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> OfferAmount {
            get {
                return this.OfferAmountField;
            }
            set {
                if ((this.OfferAmountField.Equals(value) != true)) {
                    this.OfferAmountField = value;
                    this.RaisePropertyChanged("OfferAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PortalOfferStatus {
            get {
                return this.PortalOfferStatusField;
            }
            set {
                if ((this.PortalOfferStatusField.Equals(value) != true)) {
                    this.PortalOfferStatusField = value;
                    this.RaisePropertyChanged("PortalOfferStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProfileId {
            get {
                return this.ProfileIdField;
            }
            set {
                if ((this.ProfileIdField.Equals(value) != true)) {
                    this.ProfileIdField = value;
                    this.RaisePropertyChanged("ProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RelatedCreditorContact {
            get {
                return this.RelatedCreditorContactField;
            }
            set {
                if ((this.RelatedCreditorContactField.Equals(value) != true)) {
                    this.RelatedCreditorContactField = value;
                    this.RaisePropertyChanged("RelatedCreditorContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SettlementAmount {
            get {
                return this.SettlementAmountField;
            }
            set {
                if ((this.SettlementAmountField.Equals(value) != true)) {
                    this.SettlementAmountField = value;
                    this.RaisePropertyChanged("SettlementAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SettlementAttemptId {
            get {
                return this.SettlementAttemptIdField;
            }
            set {
                if ((this.SettlementAttemptIdField.Equals(value) != true)) {
                    this.SettlementAttemptIdField = value;
                    this.RaisePropertyChanged("SettlementAttemptId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SettlementTerm {
            get {
                return this.SettlementTermField;
            }
            set {
                if ((this.SettlementTermField.Equals(value) != true)) {
                    this.SettlementTermField = value;
                    this.RaisePropertyChanged("SettlementTerm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpokeTo {
            get {
                return this.SpokeToField;
            }
            set {
                if ((object.ReferenceEquals(this.SpokeToField, value) != true)) {
                    this.SpokeToField = value;
                    this.RaisePropertyChanged("SpokeTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditorUpdate", Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors")]
    [System.SerializableAttribute()]
    public partial class CreditorUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreditorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CurrentUpdateBalanceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreditorId {
            get {
                return this.CreditorIdField;
            }
            set {
                if ((this.CreditorIdField.Equals(value) != true)) {
                    this.CreditorIdField = value;
                    this.RaisePropertyChanged("CreditorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CurrentUpdateBalance {
            get {
                return this.CurrentUpdateBalanceField;
            }
            set {
                if ((this.CurrentUpdateBalanceField.Equals(value) != true)) {
                    this.CurrentUpdateBalanceField = value;
                    this.RaisePropertyChanged("CurrentUpdateBalance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors", ConfigurationName="CreditorServiceWcf.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/AddOfferResponse", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/AddOfferResponseResponse")]
        System.Nullable<int> AddOfferResponse(COA.SettlementFix.CreditorServiceWcf.OfferResponse response);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/AddOfferResponse", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/AddOfferResponseResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> AddOfferResponseAsync(COA.SettlementFix.CreditorServiceWcf.OfferResponse response);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/CopySettlementAttempt", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/CopySettlementAttemptResponse")]
        System.Nullable<int> CopySettlementAttempt(int settlementAttemptId, string overrideAttemptedAgent, System.Nullable<int> creditorContactId, System.Nullable<COA.SettlementFix.CreditorServiceWcf.CreditorStatusType> overrideCreditorStatusType, string note, string updatedBy, System.Nullable<int> PortalOfferStatus, System.Nullable<int> RelatedCreditorContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/CopySettlementAttempt", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/CopySettlementAttemptResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> CopySettlementAttemptAsync(int settlementAttemptId, string overrideAttemptedAgent, System.Nullable<int> creditorContactId, System.Nullable<COA.SettlementFix.CreditorServiceWcf.CreditorStatusType> overrideCreditorStatusType, string note, string updatedBy, System.Nullable<int> PortalOfferStatus, System.Nullable<int> RelatedCreditorContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorPortalContacts", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorPortalContactsResponse")]
        COA.SettlementFix.CreditorServiceWcf.Contact[] GetCreditorPortalContacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorPortalContacts", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorPortalContactsResponse")]
        System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.Contact[]> GetCreditorPortalContactsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorPortalContactsByCreditorId", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorPortalContactsByCreditorIdResponse")]
        COA.SettlementFix.CreditorServiceWcf.Contact[] GetCreditorPortalContactsByCreditorId(int creditorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorPortalContactsByCreditorId", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorPortalContactsByCreditorIdResponse")]
        System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.Contact[]> GetCreditorPortalContactsByCreditorIdAsync(int creditorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorPortalContactsByCreditorProfileId", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorPortalContactsByCreditorProfileIdResponse")]
        COA.SettlementFix.CreditorServiceWcf.Contact[] GetCreditorPortalContactsByCreditorProfileId(int profileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorPortalContactsByCreditorProfileId", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorPortalContactsByCreditorProfileIdResponse")]
        System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.Contact[]> GetCreditorPortalContactsByCreditorProfileIdAsync(int profileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorContactById", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorContactByIdResponse")]
        COA.SettlementFix.CreditorServiceWcf.Contact GetCreditorContactById(int contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorContactById", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetCreditorContactByIdResponse")]
        System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.Contact> GetCreditorContactByIdAsync(int contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/UpdateCreditorContactOnboardStatus", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/UpdateCreditorContactOnboardStatusResponse")]
        void UpdateCreditorContactOnboardStatus(int contactId, COA.SettlementFix.CreditorServiceWcf.OnboardStatusType status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/UpdateCreditorContactOnboardStatus", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/UpdateCreditorContactOnboardStatusResponse")]
        System.Threading.Tasks.Task UpdateCreditorContactOnboardStatusAsync(int contactId, COA.SettlementFix.CreditorServiceWcf.OnboardStatusType status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetSettlements", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetSettlementsResponse")]
        COA.SettlementFix.CreditorServiceWcf.SettlementAttempt[] GetSettlements(COA.SettlementFix.CreditorServiceWcf.SettlementAttemptFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetSettlements", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetSettlementsResponse")]
        System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.SettlementAttempt[]> GetSettlementsAsync(COA.SettlementFix.CreditorServiceWcf.SettlementAttemptFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetSettlement", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetSettlementResponse")]
        COA.SettlementFix.CreditorServiceWcf.SettlementAttempt GetSettlement(int settlementAttemptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetSettlement", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetSettlementResponse")]
        System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.SettlementAttempt> GetSettlementAsync(int settlementAttemptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetOutsourcedCreditors", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetOutsourcedCreditorsResponse")]
        COA.SettlementFix.CreditorServiceWcf.OutsourcedCreditor[] GetOutsourcedCreditors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetOutsourcedCreditors", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetOutsourcedCreditorsResponse")]
        System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.OutsourcedCreditor[]> GetOutsourcedCreditorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetRejectionReasons", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetRejectionReasonsResponse")]
        COA.SettlementFix.CreditorServiceWcf.RejectionReason[] GetRejectionReasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetRejectionReasons", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetRejectionReasonsResponse")]
        System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.RejectionReason[]> GetRejectionReasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetPaymentsByCreditorId", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetPaymentsByCreditorIdResponse")]
        COA.SettlementFix.CreditorServiceWcf.Payment[] GetPaymentsByCreditorId(int creditorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetPaymentsByCreditorId", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetPaymentsByCreditorIdResponse")]
        System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.Payment[]> GetPaymentsByCreditorIdAsync(int creditorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetPaymentsBySettlementAttemptId", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetPaymentsBySettlementAttemptIdResponse")]
        COA.SettlementFix.CreditorServiceWcf.Payment[] GetPaymentsBySettlementAttemptId(int settlementAttemptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetPaymentsBySettlementAttemptId", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetPaymentsBySettlementAttemptIdResponse")]
        System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.Payment[]> GetPaymentsBySettlementAttemptIdAsync(int settlementAttemptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/SendCreditorEmail", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/SendCreditorEmailResponse")]
        COA.SettlementFix.CreditorServiceWcf.CommunicationResponse SendCreditorEmail(COA.SettlementFix.CreditorServiceWcf.CreditorEmailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/SendCreditorEmail", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/SendCreditorEmailResponse")]
        System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.CommunicationResponse> SendCreditorEmailAsync(COA.SettlementFix.CreditorServiceWcf.CreditorEmailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/UpdateSettlementAttempt", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/UpdateSettlementAttemptResponse")]
        bool UpdateSettlementAttempt(COA.SettlementFix.CreditorServiceWcf.SettlementAttemptUpdate updateParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/UpdateSettlementAttempt", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/UpdateSettlementAttemptResponse")]
        System.Threading.Tasks.Task<bool> UpdateSettlementAttemptAsync(COA.SettlementFix.CreditorServiceWcf.SettlementAttemptUpdate updateParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/UpdateCreditor", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/UpdateCreditorResponse")]
        bool UpdateCreditor(COA.SettlementFix.CreditorServiceWcf.CreditorUpdate updateParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/UpdateCreditor", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/UpdateCreditorResponse")]
        System.Threading.Tasks.Task<bool> UpdateCreditorAsync(COA.SettlementFix.CreditorServiceWcf.CreditorUpdate updateParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/CreateBulkCreditorLink", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/CreateBulkCreditorLinkResponse")]
        int CreateBulkCreditorLink(int[] settlementAttemptIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/CreateBulkCreditorLink", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/CreateBulkCreditorLinkResponse")]
        System.Threading.Tasks.Task<int> CreateBulkCreditorLinkAsync(int[] settlementAttemptIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetBulkCreditorLinkIds", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetBulkCreditorLinkIdsResponse")]
        int[] GetBulkCreditorLinkIds(int linkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetBulkCreditorLinkIds", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GetBulkCreditorLinkIdsResponse")]
        System.Threading.Tasks.Task<int[]> GetBulkCreditorLinkIdsAsync(int linkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/QueueScrubList", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/QueueScrubListResponse")]
        void QueueScrubList(string importId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/QueueScrubList", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/QueueScrubListResponse")]
        System.Threading.Tasks.Task QueueScrubListAsync(string importId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/MatchScrubList", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/MatchScrubListResponse")]
        void MatchScrubList(string importId, bool rerunMatching, bool disableDatabaseCalls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/MatchScrubList", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/MatchScrubListResponse")]
        System.Threading.Tasks.Task MatchScrubListAsync(string importId, bool rerunMatching, bool disableDatabaseCalls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/MatchScrubLists", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/MatchScrubListsResponse")]
        void MatchScrubLists(string[] importIds, bool rerunMatching);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/MatchScrubLists", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/MatchScrubListsResponse")]
        System.Threading.Tasks.Task MatchScrubListsAsync(string[] importIds, bool rerunMatching);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/MatchScrubListsFromDatabase", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/MatchScrubListsFromDatabaseResponse")]
        void MatchScrubListsFromDatabase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/MatchScrubListsFromDatabase", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/MatchScrubListsFromDatabaseResponse")]
        System.Threading.Tasks.Task MatchScrubListsFromDatabaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GenerateAndEmailCapitalOneTemplate", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GenerateAndEmailCapitalOneTemplateResponse")]
        void GenerateAndEmailCapitalOneTemplate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GenerateAndEmailCapitalOneTemplate", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GenerateAndEmailCapitalOneTemplateResponse")]
        System.Threading.Tasks.Task GenerateAndEmailCapitalOneTemplateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GenerateAndEmailScrubClientTemplates", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GenerateAndEmailScrubClientTemplatesResponse")]
        void GenerateAndEmailScrubClientTemplates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GenerateAndEmailScrubClientTemplates", ReplyAction="http://EnterpriseServices.CreditorService.com/COA.EnterpriseServices.Creditors/IS" +
            "ervice/GenerateAndEmailScrubClientTemplatesResponse")]
        System.Threading.Tasks.Task GenerateAndEmailScrubClientTemplatesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : COA.SettlementFix.CreditorServiceWcf.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<COA.SettlementFix.CreditorServiceWcf.IService>, COA.SettlementFix.CreditorServiceWcf.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Nullable<int> AddOfferResponse(COA.SettlementFix.CreditorServiceWcf.OfferResponse response) {
            return base.Channel.AddOfferResponse(response);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> AddOfferResponseAsync(COA.SettlementFix.CreditorServiceWcf.OfferResponse response) {
            return base.Channel.AddOfferResponseAsync(response);
        }
        
        public System.Nullable<int> CopySettlementAttempt(int settlementAttemptId, string overrideAttemptedAgent, System.Nullable<int> creditorContactId, System.Nullable<COA.SettlementFix.CreditorServiceWcf.CreditorStatusType> overrideCreditorStatusType, string note, string updatedBy, System.Nullable<int> PortalOfferStatus, System.Nullable<int> RelatedCreditorContact) {
            return base.Channel.CopySettlementAttempt(settlementAttemptId, overrideAttemptedAgent, creditorContactId, overrideCreditorStatusType, note, updatedBy, PortalOfferStatus, RelatedCreditorContact);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> CopySettlementAttemptAsync(int settlementAttemptId, string overrideAttemptedAgent, System.Nullable<int> creditorContactId, System.Nullable<COA.SettlementFix.CreditorServiceWcf.CreditorStatusType> overrideCreditorStatusType, string note, string updatedBy, System.Nullable<int> PortalOfferStatus, System.Nullable<int> RelatedCreditorContact) {
            return base.Channel.CopySettlementAttemptAsync(settlementAttemptId, overrideAttemptedAgent, creditorContactId, overrideCreditorStatusType, note, updatedBy, PortalOfferStatus, RelatedCreditorContact);
        }
        
        public COA.SettlementFix.CreditorServiceWcf.Contact[] GetCreditorPortalContacts() {
            return base.Channel.GetCreditorPortalContacts();
        }
        
        public System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.Contact[]> GetCreditorPortalContactsAsync() {
            return base.Channel.GetCreditorPortalContactsAsync();
        }
        
        public COA.SettlementFix.CreditorServiceWcf.Contact[] GetCreditorPortalContactsByCreditorId(int creditorId) {
            return base.Channel.GetCreditorPortalContactsByCreditorId(creditorId);
        }
        
        public System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.Contact[]> GetCreditorPortalContactsByCreditorIdAsync(int creditorId) {
            return base.Channel.GetCreditorPortalContactsByCreditorIdAsync(creditorId);
        }
        
        public COA.SettlementFix.CreditorServiceWcf.Contact[] GetCreditorPortalContactsByCreditorProfileId(int profileId) {
            return base.Channel.GetCreditorPortalContactsByCreditorProfileId(profileId);
        }
        
        public System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.Contact[]> GetCreditorPortalContactsByCreditorProfileIdAsync(int profileId) {
            return base.Channel.GetCreditorPortalContactsByCreditorProfileIdAsync(profileId);
        }
        
        public COA.SettlementFix.CreditorServiceWcf.Contact GetCreditorContactById(int contactId) {
            return base.Channel.GetCreditorContactById(contactId);
        }
        
        public System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.Contact> GetCreditorContactByIdAsync(int contactId) {
            return base.Channel.GetCreditorContactByIdAsync(contactId);
        }
        
        public void UpdateCreditorContactOnboardStatus(int contactId, COA.SettlementFix.CreditorServiceWcf.OnboardStatusType status) {
            base.Channel.UpdateCreditorContactOnboardStatus(contactId, status);
        }
        
        public System.Threading.Tasks.Task UpdateCreditorContactOnboardStatusAsync(int contactId, COA.SettlementFix.CreditorServiceWcf.OnboardStatusType status) {
            return base.Channel.UpdateCreditorContactOnboardStatusAsync(contactId, status);
        }
        
        public COA.SettlementFix.CreditorServiceWcf.SettlementAttempt[] GetSettlements(COA.SettlementFix.CreditorServiceWcf.SettlementAttemptFilter filter) {
            return base.Channel.GetSettlements(filter);
        }
        
        public System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.SettlementAttempt[]> GetSettlementsAsync(COA.SettlementFix.CreditorServiceWcf.SettlementAttemptFilter filter) {
            return base.Channel.GetSettlementsAsync(filter);
        }
        
        public COA.SettlementFix.CreditorServiceWcf.SettlementAttempt GetSettlement(int settlementAttemptId) {
            return base.Channel.GetSettlement(settlementAttemptId);
        }
        
        public System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.SettlementAttempt> GetSettlementAsync(int settlementAttemptId) {
            return base.Channel.GetSettlementAsync(settlementAttemptId);
        }
        
        public COA.SettlementFix.CreditorServiceWcf.OutsourcedCreditor[] GetOutsourcedCreditors() {
            return base.Channel.GetOutsourcedCreditors();
        }
        
        public System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.OutsourcedCreditor[]> GetOutsourcedCreditorsAsync() {
            return base.Channel.GetOutsourcedCreditorsAsync();
        }
        
        public COA.SettlementFix.CreditorServiceWcf.RejectionReason[] GetRejectionReasons() {
            return base.Channel.GetRejectionReasons();
        }
        
        public System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.RejectionReason[]> GetRejectionReasonsAsync() {
            return base.Channel.GetRejectionReasonsAsync();
        }
        
        public COA.SettlementFix.CreditorServiceWcf.Payment[] GetPaymentsByCreditorId(int creditorId) {
            return base.Channel.GetPaymentsByCreditorId(creditorId);
        }
        
        public System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.Payment[]> GetPaymentsByCreditorIdAsync(int creditorId) {
            return base.Channel.GetPaymentsByCreditorIdAsync(creditorId);
        }
        
        public COA.SettlementFix.CreditorServiceWcf.Payment[] GetPaymentsBySettlementAttemptId(int settlementAttemptId) {
            return base.Channel.GetPaymentsBySettlementAttemptId(settlementAttemptId);
        }
        
        public System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.Payment[]> GetPaymentsBySettlementAttemptIdAsync(int settlementAttemptId) {
            return base.Channel.GetPaymentsBySettlementAttemptIdAsync(settlementAttemptId);
        }
        
        public COA.SettlementFix.CreditorServiceWcf.CommunicationResponse SendCreditorEmail(COA.SettlementFix.CreditorServiceWcf.CreditorEmailRequest request) {
            return base.Channel.SendCreditorEmail(request);
        }
        
        public System.Threading.Tasks.Task<COA.SettlementFix.CreditorServiceWcf.CommunicationResponse> SendCreditorEmailAsync(COA.SettlementFix.CreditorServiceWcf.CreditorEmailRequest request) {
            return base.Channel.SendCreditorEmailAsync(request);
        }
        
        public bool UpdateSettlementAttempt(COA.SettlementFix.CreditorServiceWcf.SettlementAttemptUpdate updateParams) {
            return base.Channel.UpdateSettlementAttempt(updateParams);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSettlementAttemptAsync(COA.SettlementFix.CreditorServiceWcf.SettlementAttemptUpdate updateParams) {
            return base.Channel.UpdateSettlementAttemptAsync(updateParams);
        }
        
        public bool UpdateCreditor(COA.SettlementFix.CreditorServiceWcf.CreditorUpdate updateParams) {
            return base.Channel.UpdateCreditor(updateParams);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCreditorAsync(COA.SettlementFix.CreditorServiceWcf.CreditorUpdate updateParams) {
            return base.Channel.UpdateCreditorAsync(updateParams);
        }
        
        public int CreateBulkCreditorLink(int[] settlementAttemptIds) {
            return base.Channel.CreateBulkCreditorLink(settlementAttemptIds);
        }
        
        public System.Threading.Tasks.Task<int> CreateBulkCreditorLinkAsync(int[] settlementAttemptIds) {
            return base.Channel.CreateBulkCreditorLinkAsync(settlementAttemptIds);
        }
        
        public int[] GetBulkCreditorLinkIds(int linkId) {
            return base.Channel.GetBulkCreditorLinkIds(linkId);
        }
        
        public System.Threading.Tasks.Task<int[]> GetBulkCreditorLinkIdsAsync(int linkId) {
            return base.Channel.GetBulkCreditorLinkIdsAsync(linkId);
        }
        
        public void QueueScrubList(string importId) {
            base.Channel.QueueScrubList(importId);
        }
        
        public System.Threading.Tasks.Task QueueScrubListAsync(string importId) {
            return base.Channel.QueueScrubListAsync(importId);
        }
        
        public void MatchScrubList(string importId, bool rerunMatching, bool disableDatabaseCalls) {
            base.Channel.MatchScrubList(importId, rerunMatching, disableDatabaseCalls);
        }
        
        public System.Threading.Tasks.Task MatchScrubListAsync(string importId, bool rerunMatching, bool disableDatabaseCalls) {
            return base.Channel.MatchScrubListAsync(importId, rerunMatching, disableDatabaseCalls);
        }
        
        public void MatchScrubLists(string[] importIds, bool rerunMatching) {
            base.Channel.MatchScrubLists(importIds, rerunMatching);
        }
        
        public System.Threading.Tasks.Task MatchScrubListsAsync(string[] importIds, bool rerunMatching) {
            return base.Channel.MatchScrubListsAsync(importIds, rerunMatching);
        }
        
        public void MatchScrubListsFromDatabase() {
            base.Channel.MatchScrubListsFromDatabase();
        }
        
        public System.Threading.Tasks.Task MatchScrubListsFromDatabaseAsync() {
            return base.Channel.MatchScrubListsFromDatabaseAsync();
        }
        
        public void GenerateAndEmailCapitalOneTemplate() {
            base.Channel.GenerateAndEmailCapitalOneTemplate();
        }
        
        public System.Threading.Tasks.Task GenerateAndEmailCapitalOneTemplateAsync() {
            return base.Channel.GenerateAndEmailCapitalOneTemplateAsync();
        }
        
        public void GenerateAndEmailScrubClientTemplates() {
            base.Channel.GenerateAndEmailScrubClientTemplates();
        }
        
        public System.Threading.Tasks.Task GenerateAndEmailScrubClientTemplatesAsync() {
            return base.Channel.GenerateAndEmailScrubClientTemplatesAsync();
        }
    }
}
